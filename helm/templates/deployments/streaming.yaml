apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "mastodon.fullname" . }}-streaming
  labels:
    {{- include "mastodon.streaming-labels" . | nindent 4 }}
spec:
  {{- if not .Values.streaming.autoscaling.enabled }}
  replicas: {{ .Values.streaming.replicas }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "mastodon.streaming-selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        # roll the pods to pick up any db migrations or other changes
        {{- include "mastodon.rollingPodAnnotations" . | nindent 8 }}
      labels:
        {{- include "mastodon.streaming-selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: streaming
        app.kubernetes.io/part-of: rails
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "mastodon.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}-streaming
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:v{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["/usr/local/bin/node", "./streaming"]
          envFrom:
            - configMapRef:
                name: {{ include "mastodon.fullname" . }}-env
            - secretRef:
                name: {{ template "mastodon.secretName" . }}
          env:
            - name: "DB_PASS"
              valueFrom:
                secretKeyRef:
                  name: {{ template "mastodon.postgresql.secretName" . }}
                  key: DB_PASS
            - name: "REDIS_PASSWORD"
              valueFrom:
                secretKeyRef:
                  name: {{ template "mastodon.redis.secretName" . }}
                  key: REDIS_PASS
          ports:
            - name: streaming
              containerPort: {{ .Values.streaming.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /api/v1/streaming/health
              port: streaming
          readinessProbe:
            httpGet:
              path: /api/v1/streaming/health
              port: streaming
          resources:
            {{- toYaml .Values.streaming.resources | nindent 12 }}
      {{- with .Values.streaming.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.streaming.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.streaming.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
